from django.core.management.base import BaseCommand
from rewards.models import Reward
import random

REWARD_SAMPLES = [
    # 상품권
    ("GS25 상품권 5천원", "편의점 어디서나 간편하게 사용 가능", 5000, "상품권"),
    ("CU 편의점 1만원권", "야식이나 간식 구매에 딱 좋은 상품권", 10000, "상품권"),
    ("이마트 상품권 1만원", "신선식품부터 생필품까지 쇼핑 가능", 10000, "상품권"),
    ("도서문화상품권 1만원", "도서, 영화, 음악 등 다양한 문화생활 가능", 10000, "상품권"),
    ("배달의민족 1만원 쿠폰", "배달 음식을 간편하게 주문할 수 있는 쿠폰", 10000, "상품권"),
    ("롯데마트 모바일 상품권", "마트 쇼핑을 위한 알뜰 쿠폰", 8000, "상품권"),
    ("홈플러스 5천원 상품권", "생활에 꼭 필요한 쇼핑을 지원", 5000, "상품권"),
    ("문화누리카드 충전권", "문화생활을 더 풍요롭게", 7000, "상품권"),
    ("넷마블 게임쿠폰", "게임 아이템을 구매할 수 있는 쿠폰", 5000, "상품권"),
    ("카카오 이모티콘 이용권", "감정을 표현하는 귀여운 아이템", 2500, "상품권"),

    # 금융상품
    ("카카오페이 투자 지원금 1만원", "카카오페이 포인트로 펀드/주식 투자 가능", 10000, "금융상품"),
    ("토스 주식 소수점 투자 지원권", "토스포인트로 실전 주식 소액투자 가능", 7000, "금융상품"),
    ("신한 마이신한포인트 펀드 투자권", "마이신한포인트로 펀드 직접 투자 가능", 8000, "금융상품"),
    ("카카오 미니보험 결제권", "카카오페이 포인트로 보험료 결제", 5000, "금융상품"),
    ("현대해상 스마트보험 할인쿠폰", "실손보험 등 상품 가입 시 포인트 할인", 9000, "금융상품"),
    ("삼성화재 미니보험 포인트결제권", "포인트로 간편 보험 가입 가능", 6000, "금융상품"),
    ("네이버페이 투자 캐시백권", "투자 완료 시 포인트로 캐시백 리워드", 4000, "금융상품"),
    ("핀크 금융상품 할인 쿠폰", "적금·대출 상품 신청 시 포인트 할인", 8000, "금융상품"),
    ("ISA 포인트 납입 지원권", "ISA 계좌 납입금 일부를 포인트로 대체", 10000, "금융상품"),
    ("카카오페이 보험 전용 쿠폰", "미니보험 전용 포인트 쿠폰", 5000, "금융상품"),

    # 카페
    ("스타벅스 아메리카노", "따뜻한 커피 한 잔", 5000, "카페"),
    ("투썸플레이스 콜드브루", "시원한 여름 콜드브루", 5500, "카페"),
    ("이디야 카페라떼", "부드럽고 고소한 라떼", 4800, "카페"),
    ("메가커피 아이스티", "달콤한 복숭아맛 아이스티", 4000, "카페"),
    ("파스쿠찌 딸기 스무디", "상큼한 과일 스무디", 6000, "카페"),
    ("탐앤탐스 민트초코라떼", "호불호 갈리는 중독의 맛", 5700, "카페"),
    ("할리스 헤이즐넛라떼", "견과향 커피", 5300, "카페"),
    ("엔제리너스 바닐라라떼", "달콤한 바닐라의 풍미", 5500, "카페"),
    ("카페베네 핫초코", "겨울에 딱 좋은 핫초코", 4900, "카페"),
    ("빽다방 믹스커피", "추억의 믹스커피 맛", 3000, "카페"),

    # 음식
    ("배스킨라빈스 싱글킹", "아이스크림 한 스쿱", 3500, "음식"),
    ("투썸 조각 케이크", "생일 축하용 부드러운 케이크", 5000, "음식"),
    ("도미노 치즈볼", "고소하고 쫀득한 간식", 4500, "음식"),
    ("설빙 인절미빙수", "전통 디저트와 빙수의 조화", 7000, "음식"),
    ("롯데리아 치즈버거 세트", "든든한 한 끼 식사", 6500, "음식"),
    ("맘스터치 싸이순살", "바삭한 순살치킨", 7500, "음식"),
    ("버거킹 와퍼세트", "든든한 점심 식사", 8900, "음식"),
    ("KFC 타워버거세트", "높고 강력한 버거", 8800, "음식"),
    ("교촌치킨 허니콤보", "달콤짭짤한 간장치킨", 9500, "음식"),
    ("삼각김밥 3종세트", "든든한 가성비 간편식", 3900, "음식"),
]

class Command(BaseCommand):
    help = "카테고리별 10개씩 리워드 더미데이터 40개 생성"

    def handle(self, *args, **kwargs):
        for name, desc, point, category in REWARD_SAMPLES:
            Reward.objects.create(
                name=name,
                description=desc,
                point=point,
                valid_days=random.choice([7, 14, 30, 60]),
                is_active=random.choice([True, False]),
                category=category,
            )
        self.stdout.write(self.style.SUCCESS("✅ 총 40개의 리워드 더미데이터 생성 완료"))
